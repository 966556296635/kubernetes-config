---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <%= name %>
  labels:
    app: worker
    env: <%= env %>
spec:
  replicas: <%= replicas %>
  selector:
    matchLabels:
      app: worker
      env: <%= env %>
  template:
    metadata:
      labels:
        app: worker
        env: <%= env %>
        version: <%= version %>
    spec:
      containers:
      - name: <%= name %>
        image: travisci/worker:<%= version %>
        env:
        - name: TRAVIS_WORKER_TRAVIS_SITE
          value: <%= site %>
        - name: TRAVIS_WORKER_POOL_SIZE
          value: "<%= pool_size %>"

        - name: JUPITER_BRAIN_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: <%= jupiter_brain_name %>
              key: JUPITER_BRAIN_AUTH_TOKEN
        - name: TRAVIS_WORKER_JUPITERBRAIN_ENDPOINT
          value: http://$(JUPITER_BRAIN_AUTH_TOKEN)@<%= jupiter_brain_name %>/

        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TRAVIS_WORKER_LIBRATO_SOURCE
          value: $(POD_NAMESPACE)-$(POD_NAME)

        # The worker secret will have these prefixed with TRAVIS_WORKER,
        # but the AWS library wants these variable names instead.
        - name: AWS_ACCESS_KEY_ID
          value: $(TRAVIS_WORKER_AWS_ACCESS_KEY_ID)
        - name: AWS_SECRET_ACCESS_KEY
          value: $(TRAVIS_WORKER_AWS_SECRET_ACCESS_KEY)

        envFrom:
        - configMapRef:
            name: worker-common
        - secretRef:
            name: <%= name %>
        volumeMounts:
        - name: travis-vm-ssh-key
          mountPath: "/etc/secret"
          readOnly: true
      volumes:
      - name: travis-vm-ssh-key
        secret:
          secretName: travis-vm-ssh-key
      terminationGracePeriodSeconds: 7200
  strategy:
    rollingUpdate:
      # We can probably handle extra jobs while a worker is shutting down,
      # so allow an extra worker to be brought up while one is being shutdown.
      maxUnavailable: 0
      maxSurge: 1

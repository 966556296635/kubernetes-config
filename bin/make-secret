#!/usr/bin/env ruby

require 'base64'
require 'optparse'
require 'yaml'

$options = {}

OptionParser.new do |opts|
  opts.on('-n', '--name=NAME', 'The name of the Kubernetes secret to create') do |name|
    $options[:name] = name
  end
  opts.on('-p', '--prefix=PREFIX', 'The prefix for keys in the secret') do |prefix|
    $options[:prefix] = prefix
  end
  opts.on('-k', '--key=KEY', 'The key to use for storing the entire file contents') do |key|
    $options[:key] = key
  end
end.parse!

if $options[:key]
  secret_value = Base64.strict_encode64(ARGF.read)
  secret_data = { $options[:key] => secret_value }
else
  secret_data = YAML.safe_load(ARGF)
  secret_data.transform_values! do |value|
    Base64.strict_encode64(value.to_s)
  end
  secret_data.transform_keys! do |key|
    key = "#{$options[:prefix]}_#{key}" if $options[:prefix]
    key.upcase
  end
end


secret = {
  'apiVersion' => 'v1',
  'kind' => 'Secret',
  'metadata' => {
    'name' => $options[:name]
  },
  'type' => 'Opaque',
  'data' => secret_data
}

YAML.dump(secret, STDOUT)
